<div class="container">
  <div class="row justify-content-center">
    <div class="col-12 col-sm-10 col-md-8 col-lg-8">
      <%= link_to image_results_path, class: "back-button" do %>
        <i class="fa-solid fa-arrow-left mt-2"></i> Back to My Results
      <% end %>
      <h3 class="mt-1 mg-2">Details</h3>
      <div class="row">
        <div>
          <div class="w-100 overflow-hidden">
            <%= cl_image_tag @result.photo.key, height: 400, width: 400, crop: :fill %>
            <div class="m-3">
              <% if @result.cells.empty? %>
                <%= simple_form_for [@result, @cell] do |f| %>
                  <%= f.submit %>
                <% end %>
              <% else %>
                <p>See image breakdown below</p>
              <% end %>
            </div>
            <div>
              <div class="grid-container w-100">
                <% @result.cells.order(row: :asc, col: :asc).each do |cell| %>
                  <%= image_tag(cell.photo_url, class: "w-100 #{ "border border-warning" if cell.danger? }") %>
                <% end %>
              </div>
            </div>
          </div>
          <% if @result.profanity_type %>
            <h2>Text related risks: </h2>
            <p>Profanity Type: <%= @result.profanity_type.html_safe %></p>
          <% end %>
          <% if @result.profanity_type && @result.profanity_match %>
            <p>Profanity Used: <%= @result.profanity_match.html_safe %></p>
          <% end %>
          <% if @result.profanity_type && @result.profanity_match && @result.profanity_intensity %>
            <p>Profanity Intensity: <%= @result.profanity_intensity.html_safe %></p>
          <% end %>
        </div>
        <div>
          <% if @categories.values.all?(nil) %>
            <h3 class="mt-3">No imagery related risks</h3>
          <% else %>
            <h3 class="mt-3">Imagery related risks:</h3>
            <% if @danger.empty? && @caution.empty? %>
              <p><strong>Low risk for removal</strong></p>
            <% else %>
              <p><strong>Your photo is at risk due to high <%= @danger.join(", ") %> levels</strong></p>
              <p>High: <%= @danger.join(", ") %></p>
              <p>Caution: <%= @caution.join(", ")  %></p>
              <p>Safe: <%= @safe.join(", ")  %></p>
            <% end %>
            <div class="w-75 mb-3">
              <%= bar_chart(@categories) %>
            </div>
          <% end %>
          <%= link_to "Tips", tips_path, class:"button mb-3" %>
          <% if @categories.values.all?(nil) && @result.profanity_type == nil && @result.profanity_match == nil && @result.profanity_intensity == nil %>
            <%= link_to "Post to instagram!", "https://www.instagram.com/", class: "button" %>
          </a>
        <% end %>
      </div>
    </div>
  </div>
</div>
<%# const categories = [
    { label: "sexual activity", value: sexualActivityResult },
    { label: "Sexual Display", value: sexualDisplayResult },
    { label: "Erotic", value: eroticResult },
    { label: "Suggestive", value: suggestiveResult },
    { label: "Drugs", value: drugsResult },
    { label: "Gore", value: goreResult }
  ]; %>
<%# <div class="w-75">
  <canvas id="myChart" class="chart-canvas"></canvas>
</div> %>
<%#
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const ctx = document.getElementById('myChart');
  const sexualActivity = document.getElementById('sexual-activity');
  const sexualActivityResult = parseInt(sexualActivity.innerText.split(': ')[1])
  const sexualDisplay = document.getElementById('sexual-display');
  const sexualDisplayResult = parseInt(sexualDisplay.innerText.split(': ')[1])
  const erotic = document.getElementById('erotic');
  const eroticResult = parseInt(erotic.innerText.split(': ')[1])
  const suggestive = document.getElementById('suggestive');
  const suggestiveResult = parseInt(suggestive.innerText.split(': ')[1])
  const drugs = document.getElementById('drugs');
  const drugsResult = parseInt(drugs.innerText.split(': ')[1])
  const gore = document.getElementById('gore');
  const goreResult = parseInt(gore.innerText.split(': ')[1])

  const categories = [
    { label: "sexual activity", value: sexualActivityResult },
    { label: "Sexual Display", value: sexualDisplayResult },
    { label: "Erotic", value: eroticResult },
    { label: "Suggestive", value: suggestiveResult },
    { label: "Drugs", value: drugsResult },
    { label: "Gore", value: goreResult }
  ];

  // Sort the categories array in ascending order based on the value
  categories.sort(function(a, b) {
    return b.value - a.value;
  });

  const chartLabels = categories.map(function(item) {
    return item.label;
  });
  const chartData = categories.map(function(item) {
    return item.value;
  });

  new Chart(ctx, {
    type: 'bar',
    data: {
      labels: chartLabels,
      datasets: [{
        label: 'percentage',
        data: chartData,
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(255, 159, 64, 0.2)',
          'rgba(255, 205, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(201, 203, 207, 0.2)'
        ],
        borderColor: [
          'rgb(255, 99, 132)',
          'rgb(255, 159, 64)',
          'rgb(255, 205, 86)',
          'rgb(75, 192, 192)',
          'rgb(54, 162, 235)',
          'rgb(153, 102, 255)',
          'rgb(201, 203, 207)'
        ],

      }]
    },
    options: {
      indexAxis: 'y',
      scales: {
        x: {
          beginAtZero: true
        }
      }
    }
  });

</script> %>
